name: Release

on:
  push:
    # tags:
    #   - "v[0-9]+.[0-9]+.[0-9]+*"

env:
  RELEASE_BIN: vsr-new
  RELEASE_ADDS: README.md LICENSE
jobs: 
  build:
    name: Build release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-20.04
            suffix: linux
          - build: macos
            os: macos-latest
            suffix: macos
          - build: windows
            os: windows-latest
            suffix: win64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust toolchain - Linux - Win64
        uses: actions-rs/toolchain@v1
        if: matrix.build != 'macos'
        with:
          toolchain: stable
          default: true
          override: true

      - name: Rust toolchain - Mac OS
        uses: actions-rs/toolchain@v1
        if: matrix.build == 'macos'
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          default: true
          override: true

      - name: Build project - Linux - Mac OS
        if: matrix.build != 'windows'
        run: |
          cargo build --all --release
          strip target/release/${{ env.RELEASE_BIN }}
      
      - name: Build project - Win64
        if: matrix.build == 'windows'
        run: |
          cargo build --all --release

      - name: Upload build - Linux - Mac OS
        if: matrix.build != 'windows'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RELEASE_BIN }}-${{ matrix.suffix }}
          path: target/release/${{ env.RELEASE_BIN }}
          retention-days: 1

      - name: Upload build - Win64
        if: matrix.build == 'windows'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RELEASE_BIN }}-${{ matrix.suffix }}
          path: target/release/${{ env.RELEASE_BIN }}.exe
          retention-days: 1

  upload:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create dist folder
        run: |
          mkdir -p dist artifacts build/${RELEASE_BIN}-{linux,win64,macos}

      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Generates packages for release - Win64
        run: |
          mv artifacts/${RELEASE_BIN}-win64 build/
          chmod +x build/${RELEASE_BIN}-win64/${RELEASE_BIN}.exe
          tar -C build -czvf dist/${RELEASE_BIN}-win64.tar.gz ${RELEASE_BIN}-win64

      - name: Generates packages for release - Linux
        run: |
          mv artifacts/${RELEASE_BIN}-linux build/
          chmod +x build/${RELEASE_BIN}-linux/${RELEASE_BIN}
          tar -C build -czvf dist/${RELEASE_BIN}-linux.tar.gz ${RELEASE_BIN}-linux

      - name: Generates packages for release - Mac OS
        run: |
          mv artifacts/${RELEASE_BIN}-macos build/
          chmod +x build/${RELEASE_BIN}-macos/${RELEASE_BIN}
          tar -C build -czvf dist/${RELEASE_BIN}-macos.tar.gz ${RELEASE_BIN}-macos

      - name: Upload release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.md
          files: |
            dist/${{ env.RELEASE_BIN }}-win64.tar.gz
            dist/${{ env.RELEASE_BIN }}-linux.tar.gz
            dist/${{ env.RELEASE_BIN }}-macos.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Publish npm package
        env:
          NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_ACCESS_TOKEN" > ".npmrc"
          npm publish
          
      - name: Publish cargo package
        env:
          CARGO_ACCESS_TOKEN: ${{ secrets.CARGO_ACCESS_TOKEN }}
        run: |
          cargo login "$CARGO_ACCESS_TOKEN"
          cargo publish