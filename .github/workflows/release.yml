name: Release

on:
  push:
    # tags:
    #   - "v[0-9]+.[0-9]+.[0-9]+*"

env:
  RELEASE_BIN: vsr-new
  RELEASE_ADDS: README.md LICENSE
jobs: 
  build:
    name: Build release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [linux, windows]
        # build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-20.04
            suffix: linux
          # - build: macos
          #   os: macos-latest
          #   suffix: macos
          - build: windows
            os: windows-latest
            suffix: win64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust toolchain - ${{ matrix.suffix }}
        uses: actions-rs/toolchain@v1
        if: matrix.build != 'macos'
        with:
          toolchain: stable
          default: true
          override: true

      - name: Rust toolchain - ${{ matrix.suffix }}
        uses: actions-rs/toolchain@v1
        if: matrix.build == 'macos'
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          default: true
          override: true

      - name: Build project - ${{ matrix.suffix }}
        if: matrix.build != 'windows'
        run: |
          cargo build --all --release
          strip target/release/${{ env.RELEASE_BIN }}
      
      - name: Build project - ${{ matrix.suffix }}
        if: matrix.build == 'windows'
        run: |
          cargo build --all --release

      - name: Upload build - ${{ matrix.suffix }}
        if: matrix.build != 'windows'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RELEASE_BIN }}-${{ matrix.suffix }}
          path: target/release/${{ env.RELEASE_BIN }}

      - name: Upload build - ${{ matrix.suffix }}
        if: matrix.build == 'windows'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RELEASE_BIN }}-${{ matrix.suffix }}
          path: target/release/${{ env.RELEASE_BIN }}.exe

  upload:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create dist folder
        run: |
          mkdir -p dist
      
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          path: dist
          
      - name: Display structure of downloaded files
        run: ls -R

      # - name: Upload release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     body_path: CHANGELOG.md
      #     files: |
      #       dist/${{ env.RELEASE_BIN }}-win64.tar.gz
      #       dist/${{ env.RELEASE_BIN }}-linux.tar.gz
      #       dist/${{ env.RELEASE_BIN }}-macos.tar.gz
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      # - name: Publish npm package
      #   env:
      #     NPM_ACCESS_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
      #   run: |
      #     echo "//registry.npmjs.org/:_authToken=$NPM_ACCESS_TOKEN" > ".npmrc"
      #     npm publish
      # - name: Publish cargo package
      #   env:
      #     CARGO_ACCESS_TOKEN: ${{ secrets.CARGO_ACCESS_TOKEN }}
      #   run: |
      #     cargo login "$CARGO_ACCESS_TOKEN"
      #     cargo publish
      # - name: Publish docs
      #   env:
      #     NETLIFY_BUILD_HOOK: ${{ secrets.NETLIFY_BUILD_HOOK }}
      #   run: curl -X POST -d {} "$NETLIFY_BUILD_HOOK"